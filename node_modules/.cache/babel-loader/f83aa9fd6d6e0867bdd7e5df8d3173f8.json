{"remainingRequest":"/Users/erwangoudard/Desktop/Projet Test Technique/Projet Test Technique/node_modules/babel-loader/lib/index.js!/Users/erwangoudard/Desktop/Projet Test Technique/Projet Test Technique/node_modules/vuetify/lib/components/VItemGroup/VItemGroup.js","dependencies":[{"path":"/Users/erwangoudard/Desktop/Projet Test Technique/Projet Test Technique/node_modules/vuetify/lib/components/VItemGroup/VItemGroup.js","mtime":499162500000},{"path":"/Users/erwangoudard/Desktop/Projet Test Technique/Projet Test Technique/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/erwangoudard/Desktop/Projet Test Technique/Projet Test Technique/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["../../../src/components/VItemGroup/VItemGroup.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './VItemGroup.sass'\n\n// Mixins\nimport Groupable from '../../mixins/groupable'\nimport Proxyable from '../../mixins/proxyable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport { VNode } from 'vue/types'\n\nexport type GroupableInstance = InstanceType<typeof Groupable> & {\n  id?: string\n  to?: any\n  value?: any\n }\n\nexport const BaseItemGroup = mixins(\n  Proxyable,\n  Themeable\n).extend({\n  name: 'base-item-group',\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-item--active',\n    },\n    mandatory: Boolean,\n    max: {\n      type: [Number, String],\n      default: null,\n    },\n    multiple: Boolean,\n  },\n\n  data () {\n    return {\n      // As long as a value is defined, show it\n      // Otherwise, check if multiple\n      // to determine which default to provide\n      internalLazyValue: this.value !== undefined\n        ? this.value\n        : this.multiple ? [] : undefined,\n      items: [] as GroupableInstance[],\n    }\n  },\n\n  computed: {\n    classes (): Record<string, boolean> {\n      return {\n        'v-item-group': true,\n        ...this.themeClasses,\n      }\n    },\n    selectedIndex (): number {\n      return (this.selectedItem && this.items.indexOf(this.selectedItem)) || -1\n    },\n    selectedItem (): GroupableInstance | undefined {\n      if (this.multiple) return undefined\n\n      return this.selectedItems[0]\n    },\n    selectedItems (): GroupableInstance[] {\n      return this.items.filter((item, index) => {\n        return this.toggleMethod(this.getValue(item, index))\n      })\n    },\n    selectedValues (): any[] {\n      if (this.internalValue == null) return []\n\n      return Array.isArray(this.internalValue)\n        ? this.internalValue\n        : [this.internalValue]\n    },\n    toggleMethod (): (v: any) => boolean {\n      if (!this.multiple) {\n        return (v: any) => this.internalValue === v\n      }\n\n      const internalValue = this.internalValue\n      if (Array.isArray(internalValue)) {\n        return (v: any) => internalValue.includes(v)\n      }\n\n      return () => false\n    },\n  },\n\n  watch: {\n    internalValue: 'updateItemsState',\n    items: 'updateItemsState',\n  },\n\n  created () {\n    if (this.multiple && !Array.isArray(this.internalValue)) {\n      consoleWarn('Model must be bound to an array if the multiple property is true.', this)\n    }\n  },\n\n  methods: {\n\n    genData (): object {\n      return {\n        class: this.classes,\n      }\n    },\n    getValue (item: GroupableInstance, i: number): unknown {\n      return item.value == null || item.value === ''\n        ? i\n        : item.value\n    },\n    onClick (item: GroupableInstance) {\n      this.updateInternalValue(\n        this.getValue(item, this.items.indexOf(item))\n      )\n    },\n    register (item: GroupableInstance) {\n      const index = this.items.push(item) - 1\n\n      item.$on('change', () => this.onClick(item))\n\n      // If no value provided and mandatory,\n      // assign first registered item\n      if (this.mandatory && !this.selectedValues.length) {\n        this.updateMandatory()\n      }\n\n      this.updateItem(item, index)\n    },\n    unregister (item: GroupableInstance) {\n      if (this._isDestroyed) return\n\n      const index = this.items.indexOf(item)\n      const value = this.getValue(item, index)\n\n      this.items.splice(index, 1)\n\n      const valueIndex = this.selectedValues.indexOf(value)\n\n      // Items is not selected, do nothing\n      if (valueIndex < 0) return\n\n      // If not mandatory, use regular update process\n      if (!this.mandatory) {\n        return this.updateInternalValue(value)\n      }\n\n      // Remove the value\n      if (this.multiple && Array.isArray(this.internalValue)) {\n        this.internalValue = this.internalValue.filter(v => v !== value)\n      } else {\n        this.internalValue = undefined\n      }\n\n      // If mandatory and we have no selection\n      // add the last item as value\n      /* istanbul ignore else */\n      if (!this.selectedItems.length) {\n        this.updateMandatory(true)\n      }\n    },\n    updateItem (item: GroupableInstance, index: number) {\n      const value = this.getValue(item, index)\n\n      item.isActive = this.toggleMethod(value)\n    },\n    // https://github.com/vuetifyjs/vuetify/issues/5352\n    updateItemsState () {\n      this.$nextTick(() => {\n        if (this.mandatory &&\n          !this.selectedItems.length\n        ) {\n          return this.updateMandatory()\n        }\n\n        // TODO: Make this smarter so it\n        // doesn't have to iterate every\n        // child in an update\n        this.items.forEach(this.updateItem)\n      })\n    },\n    updateInternalValue (value: any) {\n      this.multiple\n        ? this.updateMultiple(value)\n        : this.updateSingle(value)\n    },\n    updateMandatory (last?: boolean) {\n      if (!this.items.length) return\n\n      const items = this.items.slice()\n\n      if (last) items.reverse()\n\n      const item = items.find(item => !item.disabled)\n\n      // If no tabs are available\n      // aborts mandatory value\n      if (!item) return\n\n      const index = this.items.indexOf(item)\n\n      this.updateInternalValue(\n        this.getValue(item, index)\n      )\n    },\n    updateMultiple (value: any) {\n      const defaultValue = Array.isArray(this.internalValue)\n        ? this.internalValue\n        : []\n      const internalValue = defaultValue.slice()\n      const index = internalValue.findIndex(val => val === value)\n\n      if (\n        this.mandatory &&\n        // Item already exists\n        index > -1 &&\n        // value would be reduced below min\n        internalValue.length - 1 < 1\n      ) return\n\n      if (\n        // Max is set\n        this.max != null &&\n        // Item doesn't exist\n        index < 0 &&\n        // value would be increased above max\n        internalValue.length + 1 > this.max\n      ) return\n\n      index > -1\n        ? internalValue.splice(index, 1)\n        : internalValue.push(value)\n\n      this.internalValue = internalValue\n    },\n    updateSingle (value: any) {\n      const isSame = value === this.internalValue\n\n      if (this.mandatory && isSame) return\n\n      this.internalValue = isSame ? undefined : value\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.genData(), this.$slots.default)\n  },\n})\n\nexport default BaseItemGroup.extend({\n  name: 'v-item-group',\n\n  provide (): object {\n    return {\n      itemGroup: this,\n    }\n  },\n})\n"],"sourceRoot":""}]}